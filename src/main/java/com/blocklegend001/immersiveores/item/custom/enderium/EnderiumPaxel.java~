package com.blocklegend001.immersiveores.item.custom.enderium;

import com.blocklegend001.immersiveores.util.ModTags;
import net.minecraft.ChatFormatting;
import net.minecraft.client.gui.screens.Screen;
import net.minecraft.core.BlockPos;
import net.minecraft.network.chat.Component;
import net.minecraft.sounds.SoundEvents;
import net.minecraft.sounds.SoundSource;
import net.minecraft.world.InteractionResult;
import net.minecraft.world.item.DiggerItem;
import net.minecraft.world.item.ItemStack;
import net.minecraft.world.item.ToolMaterial;
import net.minecraft.world.item.TooltipFlag;
import net.minecraft.world.item.context.UseOnContext;
import net.minecraft.world.level.Level;
import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.block.state.BlockState;
import net.minecraftforge.common.ToolAction;
import net.minecraftforge.common.ToolActions;

import java.util.List;

public class EnderiumPaxel extends DiggerItem {

    public EnderiumPaxel(ToolMaterial pTier, int pAttackDamageModifier, float pAttackSpeedModifier, Properties pProperties) {
        super(pTier, ModTags.Blocks.ENDERIUM_PAXEL_MINEABLE, pAttackDamageModifier, pAttackSpeedModifier, pProperties);
    }

    @Override
    public InteractionResult useOn(UseOnContext context) {
        Level world = context.getLevel();
        BlockPos pos = context.getClickedPos();
        BlockState state = world.getBlockState(pos);
        Block block = state.getBlock();
        if (block == Blocks.GRASS_BLOCK || block == Blocks.DIRT || block == Blocks.PODZOL || block == Blocks.COARSE_DIRT || block == Blocks.MYCELIUM || block == Blocks.ROOTED_DIRT) {
            BlockState newPathState = Blocks.DIRT_PATH.defaultBlockState();
            world.setBlockAndUpdate(pos, newPathState);
            world.playSound(null, pos, SoundEvents.SHOVEL_FLATTEN, SoundSource.BLOCKS, 1.0f, 1.0f);
            return InteractionResult.SUCCESS;
        }
        if (block == Blocks.OAK_LOG) {
            BlockState newStrippedLog = Blocks.STRIPPED_OAK_LOG.defaultBlockState();
            world.setBlockAndUpdate(pos, newStrippedLog);
            world.playSound(null, pos, SoundEvents.AXE_STRIP, SoundSource.BLOCKS, 1.0f, 1.0f);
            return InteractionResult.SUCCESS;
        } if (block == Blocks.SPRUCE_LOG) {
            BlockState newStrippedLog = Blocks.STRIPPED_SPRUCE_LOG.defaultBlockState();
            world.setBlockAndUpdate(pos, newStrippedLog);
            world.playSound(null, pos, SoundEvents.AXE_STRIP, SoundSource.BLOCKS, 1.0f, 1.0f);
            return InteractionResult.SUCCESS;
        } if (block == Blocks.BIRCH_LOG) {
            BlockState newStrippedLog = Blocks.STRIPPED_BIRCH_LOG.defaultBlockState();
            world.setBlockAndUpdate(pos, newStrippedLog);
            world.playSound(null, pos, SoundEvents.AXE_STRIP, SoundSource.BLOCKS, 1.0f, 1.0f);
            return InteractionResult.SUCCESS;
        } if (block == Blocks.ACACIA_LOG) {
            BlockState newStrippedLog = Blocks.STRIPPED_ACACIA_LOG.defaultBlockState();
            world.setBlockAndUpdate(pos, newStrippedLog);
            world.playSound(null, pos, SoundEvents.AXE_STRIP, SoundSource.BLOCKS, 1.0f, 1.0f);
            return InteractionResult.SUCCESS;
        } if (block == Blocks.DARK_OAK_LOG) {
            BlockState newStrippedLog = Blocks.STRIPPED_DARK_OAK_LOG.defaultBlockState();
            world.setBlockAndUpdate(pos, newStrippedLog);
            world.playSound(null, pos, SoundEvents.AXE_STRIP, SoundSource.BLOCKS, 1.0f, 1.0f);
            return InteractionResult.SUCCESS;
        } if (block == Blocks.MANGROVE_LOG) {
            BlockState newStrippedLog = Blocks.STRIPPED_MANGROVE_LOG.defaultBlockState();
            world.setBlockAndUpdate(pos, newStrippedLog);
            world.playSound(null, pos, SoundEvents.AXE_STRIP, SoundSource.BLOCKS, 1.0f, 1.0f);
            return InteractionResult.SUCCESS;
        } if (block == Blocks.JUNGLE_LOG) {
            BlockState newStrippedLog = Blocks.STRIPPED_JUNGLE_LOG.defaultBlockState();
            world.setBlockAndUpdate(pos, newStrippedLog);
            world.playSound(null, pos, SoundEvents.AXE_STRIP, SoundSource.BLOCKS, 1.0f, 1.0f);
            return InteractionResult.SUCCESS;
        } if (block == Blocks.OAK_WOOD) {
            BlockState newStrippedLog = Blocks.STRIPPED_OAK_WOOD.defaultBlockState();
            world.setBlockAndUpdate(pos, newStrippedLog);
            world.playSound(null, pos, SoundEvents.AXE_STRIP, SoundSource.BLOCKS, 1.0f, 1.0f);
            return InteractionResult.SUCCESS;
        } if (block == Blocks.SPRUCE_WOOD) {
            BlockState newStrippedLog = Blocks.STRIPPED_SPRUCE_WOOD.defaultBlockState();
            world.setBlockAndUpdate(pos, newStrippedLog);
            world.playSound(null, pos, SoundEvents.AXE_STRIP, SoundSource.BLOCKS, 1.0f, 1.0f);
            return InteractionResult.SUCCESS;
        } if (block == Blocks.BIRCH_WOOD) {
            BlockState newStrippedLog = Blocks.STRIPPED_BIRCH_WOOD.defaultBlockState();
            world.setBlockAndUpdate(pos, newStrippedLog);
            world.playSound(null, pos, SoundEvents.AXE_STRIP, SoundSource.BLOCKS, 1.0f, 1.0f);
            return InteractionResult.SUCCESS;
        } if (block == Blocks.ACACIA_WOOD) {
            BlockState newStrippedLog = Blocks.STRIPPED_ACACIA_WOOD.defaultBlockState();
            world.setBlockAndUpdate(pos, newStrippedLog);
            world.playSound(null, pos, SoundEvents.AXE_STRIP, SoundSource.BLOCKS, 1.0f, 1.0f);
            return InteractionResult.SUCCESS;
        } if (block == Blocks.DARK_OAK_WOOD) {
            BlockState newStrippedLog = Blocks.STRIPPED_DARK_OAK_WOOD.defaultBlockState();
            world.setBlockAndUpdate(pos, newStrippedLog);
            world.playSound(null, pos, SoundEvents.AXE_STRIP, SoundSource.BLOCKS, 1.0f, 1.0f);
            return InteractionResult.SUCCESS;
        } if (block == Blocks.MANGROVE_WOOD) {
            BlockState newStrippedLog = Blocks.STRIPPED_MANGROVE_WOOD.defaultBlockState();
            world.setBlockAndUpdate(pos, newStrippedLog);
            world.playSound(null, pos, SoundEvents.AXE_STRIP, SoundSource.BLOCKS, 1.0f, 1.0f);
            return InteractionResult.SUCCESS;
        } if (block == Blocks.JUNGLE_WOOD) {
            BlockState newStrippedLog = Blocks.STRIPPED_JUNGLE_WOOD.defaultBlockState();
            world.setBlockAndUpdate(pos, newStrippedLog);
            world.playSound(null, pos, SoundEvents.AXE_STRIP, SoundSource.BLOCKS, 1.0f, 1.0f);
            return InteractionResult.SUCCESS;
        }
        return super.useOn(context);
    }

    @Override
    public boolean canPerformAction(ItemStack stack, ToolAction toolAction) {
        return ToolActions.DEFAULT_PICKAXE_ACTIONS.contains(toolAction)
                || ToolActions.DEFAULT_AXE_ACTIONS.contains(toolAction)
                || ToolActions.DEFAULT_SHOVEL_ACTIONS.contains(toolAction);
    }

    @Override
    public void appendHoverText(ItemStack pStack, TooltipContext pContext, List<Component> components, TooltipFlag pTooltipFlag) {
        if(Screen.hasShiftDown()) {
            components.add(Component.translatable("tooltip.immersiveores.unbreakble.tooltip").withStyle(ChatFormatting.DARK_AQUA));
            components.add(Component.translatable("tooltip.immersiveores.immunetofire.tooltip").withStyle(ChatFormatting.DARK_AQUA));
        } else {
            components.add(Component.translatable("tooltip.immersiveores.pressshiftformoreinfo.tooltip").withStyle(ChatFormatting.DARK_AQUA));
        }
    }
}
